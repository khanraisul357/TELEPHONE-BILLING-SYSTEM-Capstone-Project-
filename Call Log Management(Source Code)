#include <stdio.h>
#include <string.h>

typedef struct usersInfo {
    int user_id;
    char username[13];
    char email[30];
    char phone[13];  
    char password[20];
    char address[50];
    float balance;
}USER;


typedef struct callInfo{
    char callerNumber[20];
    char receiverNumber[20];
    char date[15];
    char call_received_Time[30]; // User registered time
    char call_end_Time[30]; // User login time
    char duration[10];
    char callType[10];
    int duration;
    float cost;
}CALLlogs;

#define max_calls 100
CALLlogs calls[max_calls];
int callLOG_count=0;

// void CallLogDetails(int user_id,int select){
    
//     if(select==1){
//         USER tempuser;
//         while(fread(&tempuser,sizeof(USER),1,binary_file)){
//             if(strcmp(user_id,tempuser.user_id)){
                
//                 printf("Enter DialSer Number: ");
//                 fgets(calls[callLOG_count].callerNumber,sizeof(calls[callLOG_count].callerNumber),stdin);
//                 calls[callLOG_count].callerNumber[strcspn(calls[callLOG_count].callerNumber, "\n")] = '\0';    
                    
//                 printf("Enter Date: ");
//                 fgets(calls[callLOG_count].date,sizeof(calls[callLOG_count].date),stdin);
//                 calls[callLOG_count].date[strcspn(calls[callLOG_count].date, "\n")] = '\0'; 

//                 printf("Enter Time: ");
//                 fgets(calls[callLOG_count].call_received_Time,sizeof(calls[callLOG_count].call_received_Time),stdin);
//                 calls[callLOG_count].call_received_Time[strcspn(calls[callLOG_count].call_received_Time, "\n")] = '\0';    
                
//                 printf("Enter Call Duration: ");
//                 fgets(calls[callLOG_count].duration,sizeof(calls[callLOG_count].duration),stdin);
//                 calls[callLOG_count].duration[strcspn(calls[callLOG_count].duration, "\n")] = '\0'    
                
//                 printf("Enter Call Type: ");
//                 fgets(calls[callLOG_count].callType,sizeof(calls[callLOG_count].callType),stdin);
//                 calls[callLOG_count].callType[strcspn(calls[callLOG_count].callType, "\n")] = '\0';    
                
                
//             }
//         }        
//     }
    
//     else if(select==2){
//         USER tempuser;
//         while(fread(&tempuser,sizeof(USER),1,binary_file)){
//             if(strcmp(user_id,tempuser.user_id)){
//                 printf("Enter Receiver Number: ");
//                 fgets(calls[callLOG_count].receiverNumber,sizeof(calls[callLOG_count].receiverNumber),stdin);
//                 calls[callLOG_count].receiverNumber[strcspn(calls[callLOG_count].receiverNumber, "\n")] = '\0';    
//                 printf("Enter Date: ");
//                 fgets(calls[callLOG_count].date,sizeof(calls[callLOG_count].date),stdin);
//                 calls[callLOG_count].date[strcspn(calls[callLOG_count].date, "\n")] = '\0';    
//                 printf("Enter Time: ");
//                 fgets(calls[callLOG_count].call_received_Time,sizeof(calls[callLOG_count].call_received_Time),stdin);
//                 calls[callLOG_count].call_received_Time[strcspn(calls[callLOG_count].call_received_Time, "\n")] = '\0';    
//                 printf("Enter Call Duration: ");
//                 fgets(calls[callLOG_count].duration,sizeof(calls[callLOG_count].duration),stdin);
//                 calls[callLOG_count].duration[strcspn(calls[callLOG_count].duration, "\n")] = '\0'    
                
//                 printf("Enter Call Type: ");
//                 fgets(calls[callLOG_count].callType,sizeof(calls[callLOG_count].callType),stdin);
//                 calls[callLOG_count].callType[strcspn(calls[callLOG_count].callType, "\n")] = '\0';    
//             }  
                
//         }    
//     }

//     FILE* binary_file=fopen("User Information","a+b");
//     FILE* text_file=fopen("User Info.txt","a");

//     if(binary_file==NULL || text_file==NULL){
//         printf("Cannot open Call Log Details!");
//     }
    

    
// }

//Main Function
int main() {
    int Choice,user_ID;

    while (1) {
        //Navigation Menu
        printf("\n| --- Menu --- |\n");
        printf("1. Register\n");
        printf("2. Login\n");
        printf("3. Exit\n");
        printf("Select from Navigation Menu: ");
        scanf("%d", &Choice);
        getchar();

        switch (Choice) {
            case 1:
                registerUser();
                break;
            case 2:
                user_ID=loginUser();
                printf("USER id= %d\n",user_ID);
                if(user_ID!=-1){
                    int Sub_Choice_1;
                    while(1){
                        printf("| --- Dashboard --- |\n1. Call Log Details\n2. Generate Bill\n3. Report\n4. Ledger\n5. Log Out\nSelect : ");
                        scanf("%d",&Sub_Choice_1);
                        getchar();
                        switch(Sub_Choice_1){
                            case 1:
                                int Sub_Choice_2;
                                printf("\n| --- Call Logs --- |\n");
                                printf("1. Dialed\n");
                                printf("2. Received\n");
                                printf("3. Missed\n");
                                printf("4. Dashboard\n");
                                printf("Select: \n");
                                scanf("%d",&Sub_Choice_2);
                                getchar();
                        
                                switch(Sub_Choice_2){
                                    case 1:
                                    //   CallLogDetails(user_ID,Sub_Choice_2);
                                      break;
                                      case 2:
                                         //
                                         break;
                                      case 3:
                                         //
                                         break;
                                      case 4:
                                         break;
                                      default: 
                                          printf("\n\nInvalid choice! Please try again.\n");
                                      
                                }
                                
                                break;
                            case 2:
                            //    GenerateBill();
                               break;
                            case 3:
                            //    Report();
                               break;   
                            case 4:
                            //    Ledger();
                               break;
                            case 5:
                               return 0;
                               break;
                               
                            default:
                               printf("\n\nInvalid choice! Please try again.\n");
                        }
                    }    
                }
                break;
            case 3:
                printf("\nExiting the program. Goodbye!\n\n");
                return 0;
            default:
                printf("\nInvalid choice! Please try again.\n\n");
        }
    }

    return 0;
}

