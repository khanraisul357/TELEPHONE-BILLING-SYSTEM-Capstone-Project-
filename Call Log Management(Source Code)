#include <stdio.h>
#include <string.h>

typedef struct usersInfo {
    int user_id;
    char username[13];
    char email[30];
    char phone[13];  
    char password[20];
    char address[50];
    float balance;
}USER;

//Define registerUser() Function to proceed
//Define loginUser() Function to proceed


typedef struct callInfo{
    char dialed_Number[20];
    char received_Number[20];
    char missed_Number[20];
    char date[15];
    char time[30]; 
    char duration[10];
    char callType[20];
    float cost;
}CALLlogs;

#define max_calls 100
CALLlogs calls[max_calls];
int callLOG_count=0;

void CallLogDetails(int select){
    
    
    FILE* text_file=fopen("Call Log Management.txt","a+");
    if(text_file==NULL){
        printf("Cannot open Call Log Details!");
    }

    if(select==1){
        printf("Enter Dialed Number: ");
        fgets(calls[callLOG_count].dialed_Number,sizeof(calls[callLOG_count].dialed_Number),stdin);
        calls[callLOG_count].dialed_Number[strcspn(calls[callLOG_count].dialed_Number, "\n")] = '\0';    
        
        printf("Enter Date: ");
        fgets(calls[callLOG_count].date,sizeof(calls[callLOG_count].date),stdin);
        calls[callLOG_count].date[strcspn(calls[callLOG_count].date, "\n")] = '\0'; 
        printf("Enter Time: ");
        fgets(calls[callLOG_count].time,sizeof(calls[callLOG_count].time),stdin);
        calls[callLOG_count].time[strcspn(calls[callLOG_count].time, "\n")] = '\0';    
        
        printf("Enter Call Duration: ");
        fgets(calls[callLOG_count].duration,sizeof(calls[callLOG_count].duration),stdin);
        calls[callLOG_count].duration[strcspn(calls[callLOG_count].duration, "\n")] = '\0';   
        
        printf("Enter Call Type: ");
        fgets(calls[callLOG_count].callType,sizeof(calls[callLOG_count].callType),stdin);
        calls[callLOG_count].callType[strcspn(calls[callLOG_count].callType, "\n")] = '\0';    
        
        fprintf(text_file, "---| call log count: %d\n---| Dialed Number: %s\n---| Date: %s\n---| Time: %s\n---| Duration: %s\n---| Type: %s\n\n\n",callLOG_count,calls[callLOG_count].dialed_Number,calls[callLOG_count].date,calls[callLOG_count].time,calls[callLOG_count].duration,calls[callLOG_count].callType);

        printf("\n======= Dialed =======\n");
        printf("---| Dialed Number: %s\n", calls[callLOG_count].dialed_Number);
        printf("---| Date: %s\n", calls[callLOG_count].date);
        printf("---| Time: %s\n", calls[callLOG_count].time);
        printf("---| Duration: %s\n", calls[callLOG_count].duration);
        printf("---| Type: %s\n\n", calls[callLOG_count].callType);

}


    else if(select==2){
        printf("Enter Received Number: ");
        fgets(calls[callLOG_count].received_Number,sizeof(calls[callLOG_count].received_Number),stdin);
        calls[callLOG_count].received_Number[strcspn(calls[callLOG_count].received_Number, "\n")] = '\0';    
        
        printf("Enter Date: ");
        fgets(calls[callLOG_count].date,sizeof(calls[callLOG_count].date),stdin);
        calls[callLOG_count].date[strcspn(calls[callLOG_count].date, "\n")] = '\0';    
        
        printf("Enter Time: ");
        fgets(calls[callLOG_count].time,sizeof(calls[callLOG_count].time),stdin);
        calls[callLOG_count].time[strcspn(calls[callLOG_count].time, "\n")] = '\0';    
        
        printf("Enter Call Duration: ");
        fgets(calls[callLOG_count].duration,sizeof(calls[callLOG_count].duration),stdin);
        calls[callLOG_count].duration[strcspn(calls[callLOG_count].duration, "\n")] = '\0';    
        
        printf("Enter Call Type: ");
        fgets(calls[callLOG_count].callType,sizeof(calls[callLOG_count].callType),stdin);
        calls[callLOG_count].callType[strcspn(calls[callLOG_count].callType, "\n")] = '\0';    
        
        fprintf(text_file, "---| call log count: %d\n---| Dialed Number: %s\n---| Date: %s\n---| Time: %s\n---| Duration: %s\n---| Type: %s\n\n\n",callLOG_count,calls[callLOG_count].dialed_Number,calls[callLOG_count].date,calls[callLOG_count].time,calls[callLOG_count].duration,calls[callLOG_count].callType);

        printf("\n======= Received =======\n");
        printf("---| Received Number: %s\n", calls[callLOG_count].received_Number);
        printf("---| Date: %s\n", calls[callLOG_count].date);
        printf("---| Time: %s\n", calls[callLOG_count].time);
        printf("---| Duration: %s\n", calls[callLOG_count].duration);
        printf("---| Type: %s\n\n", calls[callLOG_count].callType);

}  


    else if(select==3){
        printf("Enter Missed Number: ");
        fgets(calls[callLOG_count].received_Number,sizeof(calls[callLOG_count].received_Number),stdin);
        calls[callLOG_count].received_Number[strcspn(calls[callLOG_count].received_Number, "\n")] = '\0';    
        
        printf("Enter Date: ");
        fgets(calls[callLOG_count].date,sizeof(calls[callLOG_count].date),stdin);
        calls[callLOG_count].date[strcspn(calls[callLOG_count].date, "\n")] = '\0';    
        
        printf("Enter Time: ");
        fgets(calls[callLOG_count].time,sizeof(calls[callLOG_count].time),stdin);
        calls[callLOG_count].time[strcspn(calls[callLOG_count].time, "\n")] = '\0';   
        
        printf("Enter Call Duration: ");
        fgets(calls[callLOG_count].duration,sizeof(calls[callLOG_count].duration),stdin);
        calls[callLOG_count].duration[strcspn(calls[callLOG_count].duration, "\n")] = '\0';    
        
        printf("Enter Call Type: ");
        fgets(calls[callLOG_count].callType,sizeof(calls[callLOG_count].callType),stdin);
        calls[callLOG_count].callType[strcspn(calls[callLOG_count].callType, "\n")] = '\0';    
        
        fprintf(text_file, "---| call log count: %d\n---| Dialed Number: %s\n---| Date: %s\n---| Time: %s\n---| Duration: %s\n---| Type: %s\n\n\n",callLOG_count,calls[callLOG_count].dialed_Number,calls[callLOG_count].date,calls[callLOG_count].time,calls[callLOG_count].duration,calls[callLOG_count].callType);


        printf("\n======= Missed =======\n");
        printf("---| Missed Number: %s\n", calls[callLOG_count].missed_Number);
        printf("---| Date: %s\n", calls[callLOG_count].date);
        printf("---| Time: %s\n", calls[callLOG_count].time);
        printf("---| Duration: %s\n", calls[callLOG_count].duration);
        printf("---| Type: %s\n\n", calls[callLOG_count].callType);

}

fclose(text_file);
callLOG_count++;

}


//Main Function
int main() {
    int Choice,Sub_Choice_1,Sub_Choice_2,user_ID;

    while (1) {
        //Navigation Menu
        printf("\n| --- Menu --- |\n");
        printf("1. Register\n");
        printf("2. Login\n");
        printf("3. Exit\n");
        printf("Select from Navigation Menu: ");
        scanf("%d", &Choice);
        getchar();

        switch (Choice) {
            case 1:
                registerUser();
                break;
            case 2:
                user_ID=loginUser();
                printf("USER id= %d\n",user_ID);

                int logged_in=1;
                if(user_ID!=-1){
                    while(logged_in){
                        //Dashboard Menu
                        printf("\n| --- Dashboard --- |\n1. Call Log Details\n2. Generate Bill\n3. Report\n4. Ledger\n5. Log Out\nSelect : ");
                        scanf("%d",&Sub_Choice_1);
                        getchar();

                        int entered_call_log=1;
                        switch(Sub_Choice_1){
                            case 1:
                                while(entered_call_log){
                                    //Call Log Menu
                                    printf("\n| --- Call Logs --- |\n");
                                    printf("1. Dialed\n");
                                    printf("2. Received\n");
                                    printf("3. Missed\n");
                                    printf("4. Dashboard\n");
                                    printf("Select: ");
                                    scanf("%d",&Sub_Choice_2);
                                    getchar();
                                    
                                    switch(Sub_Choice_2){
                                        case 1:
                                                CallLogDetails(Sub_Choice_2);
                                            break;
                                        case 2:
                                                CallLogDetails(Sub_Choice_2);
                                                break;
                                        case 3:
                                                CallLogDetails(Sub_Choice_2); 
                                                break;
                                        case 4:
                                        entered_call_log=0;//return to Dashboard from Call Log Menu
                                        break;
                                        default: 
                                                printf("\n\nInvalid choice! Please try again.\n");
                                            
                                            }      
                                }
                                
                            break;
                            
                            case 2:
                                //GenerateBill();
                                break;
                            case 3:
                                //    Report();
                                break;   
                            case 4:
                                //    Ledger();
                                break;
                            case 5:
                                printf("\nLogging out...\n");
                                logged_in=0;//return to Main Menu from Dashboard
                                break;
                            default:
                                printf("\n\nInvalid choice! Please try again.\n");
                        }
                    }    
                }
                break;
            case 3:
                printf("\nExiting the program. Goodbye!\n\n");
                return 0;
            default:
                printf("\nInvalid choice! Please try again.\n\n");
        }
    }

    return 0;
}
